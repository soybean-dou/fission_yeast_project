is_strain = TRUE)
ch2<-find_overlapping_gene(Serial$ch2,five_UTR$ch2,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
ch3<-find_overlapping_gene(Serial$ch3,five_UTR$ch3,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
S_5utr<-mget(ls(pattern = "ch"))
ch1<-rbind(GS_5utr$ch1,B_5utr$ch1,S_5utr$ch1)
ch2<-rbind(GS_5utr$ch2,B_5utr$ch2,S_5utr$ch2)
ch3<-rbind(GS_5utr$ch3,B_5utr$ch3,S_5utr$ch3)
utr5_overlap<-mget(ls(pattern = "ch"))
debugSource('~/fission_yeast_project/fission_yeast_practice/find_overlap_func.r')
#----------------
ch1<-subset(gene_data, seqid == "I" & type =="gene")
ch1<-as.data.frame(t(as.data.frame(apply(ch1, 1,modify_id))))
ch2<-subset(gene_data, seqid == "II" & type =="gene")
ch2<-as.data.frame(t(as.data.frame(apply(ch2, 1,modify_id))))
ch3<-subset(gene_data, seqid == "III" & type =="gene")
ch3<-as.data.frame(t(as.data.frame(apply(ch3, 1,modify_id))))
gene<-mget(ls(pattern = "ch"))
for(i in 1:nrow(utr5_overlap$ch1)){
ch1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
df3<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
df3<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
View(df3)
View(df1)
ch1<-rbind(GS_5utr$ch1,B_5utr$ch1,S_5utr$ch1)
ch2<-rbind(GS_5utr$ch2,B_5utr$ch2,S_5utr$ch2)
ch3<-rbind(GS_5utr$ch3,B_5utr$ch3,S_5utr$ch3)
utr5_overlap<-mget(ls(pattern = "ch"))
View(utr3_overlap)
View(utr3_overlap[["ch1"]])
View(utr5_overlap)
View(utr5_overlap[["ch1"]])
df3<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
df3<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
View(df3)
ch1<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
ch1<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
ch2<-data.frame()
ch3<-data.frame()
ch1<-data.frame()
ch2<-data.frame()
ch3<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
utr5_overlap<-mget(ls(pattern ="ch"))
ch1<-data.frame()
ch2<-data.frame()
ch3<-data.frame()
utr5_overlap_<-mget(ls(pattern ="ch"))
ch1<-rbind(GS_5utr$ch1,B_5utr$ch1,S_5utr$ch1)
ch2<-rbind(GS_5utr$ch2,B_5utr$ch2,S_5utr$ch2)
ch3<-rbind(GS_5utr$ch3,B_5utr$ch3,S_5utr$ch3)
utr5_overlap<-mget(ls(pattern = "ch"))
for(j in 1:3){
for(i in 1:nrow(utr5_overlap[j])){
df1<-subset(gene[j], attributes == utr5_overlap$ch1[j][i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
utr5_overlap_[j]<-rbind(utr5_overlap_[j],cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
}
utr5_overlap[j]
j=0
for(j in 1:3){
for(i in 1:nrow(utr5_overlap[j])){
df1<-subset(gene[j], attributes == utr5_overlap$ch1[j][i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
utr5_overlap_[j]<-rbind(utr5_overlap_[j],cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
}
for(j in 1:3){
for(i in 1:nrow(utr5_overlap[j])){
df1<-subset(gene[j], attributes == utr5_overlap$ch1[j][i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
utr5_overlap_[j]<-rbind(utr5_overlap_[j],cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
}
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
utr5_overlap_[1]<-rbind(utr5_overlap_[1],cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
ch1<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
ch1<-rbind(GS_5utr$ch1,B_5utr$ch1,S_5utr$ch1)
ch2<-rbind(GS_5utr$ch2,B_5utr$ch2,S_5utr$ch2)
ch3<-rbind(GS_5utr$ch3,B_5utr$ch3,S_5utr$ch3)
utr5_overlap<-mget(ls(pattern = "ch"))
ch1<-data.frame()
ch2<-data.frame()
ch3<-data.frame()
utr5_overlap_<-mget(ls(pattern ="ch"))
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch2)){
df1<-subset(gene$ch2, attributes == utr5_overlap$ch2[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch2<-rbind(ch1,cbind(utr5_overlap_$ch2[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch2)){
df1<-subset(gene$ch2, attributes == utr5_overlap$ch2[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch2<-rbind(ch1,cbind(utr5_overlap_$ch2[i,1:4],percent,as.numeric(utr5_overlap$ch2[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch2)){
df1<-subset(gene$ch2, attributes == utr5_overlap$ch2[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch2<-rbind(ch1,cbind(utr5_overlap$ch2[i,1:4],percent,as.numeric(utr5_overlap$ch2[i,4])/percent))
}
ch1<-rbind(GS_5utr$ch1,B_5utr$ch1,S_5utr$ch1)
ch2<-rbind(GS_5utr$ch2,B_5utr$ch2,S_5utr$ch2)
ch3<-rbind(GS_5utr$ch3,B_5utr$ch3,S_5utr$ch3)
utr5_overlap<-mget(ls(pattern = "ch"))
ch1<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch2)){
df1<-subset(gene$ch2, attributes == utr5_overlap$ch2[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch2<-rbind(ch1,cbind(utr5_overlap$ch2[i,1:4],percent,as.numeric(utr5_overlap$ch2[i,4])/percent))
}
ch1<-data.frame()
ch2<-data.frame()
ch3<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch1<-rbind(ch1,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch2)){
df1<-subset(gene$ch2, attributes == utr5_overlap$ch2[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch2<-rbind(ch2,cbind(utr5_overlap$ch2[i,1:4],percent,as.numeric(utr5_overlap$ch2[i,4])/percent))
}
for(i in 1:nrow(utr5_overlap$ch3){
for(i in 1:nrow(utr5_overlap$ch3)){
df1<-subset(gene$ch3, attributes == utr5_overlap$ch3[i,2])
#df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-(as.numeric(df1$end)-as.numeric(df1$start))
ch3<-rbind(ch3,cbind(utr5_overlap$ch3[i,1:4],percent,as.numeric(utr5_overlap$ch3[i,4])/percent))
}
utr5_overlap<-mget(ls(pattern = "ch"))
View(utr5_overlap)
View(utr5_overlap[["ch1"]])
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
library(pheatmap)
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome(deletion/gene)",as.character(k)), na_col = "white")
dev.off()
}
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
dev.off()
}
View(utr5_overlap[["ch3"]])
View(utr5_matrix)
utr5_overlap[[1]]
utr5_overlap[1]
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
dev.off()
}
utr5_overlap[[2]]
utr5_overlap[[3]]
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(utr5_overlap[[k]][h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
dev.off()
}
dev.new()
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = c(0,1),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = c(0,0.5,1),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = c(0:1),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = 0:1,
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = 0:1
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100), breaks = 0:1,
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k),"(deletion/gene)"), na_col = "white")
