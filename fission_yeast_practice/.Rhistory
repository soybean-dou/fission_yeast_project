while(i<=nrow(five_UTR$ch1)){
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
i<-1
while(i<=nrow(five_UTR$ch1)){
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
print(j)
}
i<-i+1
}
i<-1
i<-1
while(i<=nrow(five_UTR$ch1)){
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
print(j)
}
i<-i+1
}
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
print('a')
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
source('~/fission_yeast_project/fission_yeast_practice/aaa.R')
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
debugSource('~/fission_yeast_project/fission_yeast_practice/aaa.R')
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
j<-j+1
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
View(five_UTR)
View(five_UTR[["ch1"]])
ch1<-subset(gene_data, seqid == "I" & type =="five_prime_UTR")
ch2<-subset(gene_data, seqid == "II" & type =="five_prime_UTR")
ch3<-subset(gene_data, seqid == "III" & type =="five_prime_UTR")
mit<-subset(gene_data, seqid == "mitochondrial" & type =="five_prime_UTR")
five_UTR<-mget(ls(pattern = "ch"))
five_UTR$ch1<-as.data.frame(t(as.data.frame(apply(five_UTR$ch1, 1,modify_id))))
five_UTR$ch2<-as.data.frame(t(as.data.frame(apply(five_UTR$ch2, 1,modify_id))))
five_UTR$ch3<-as.data.frame(t(as.data.frame(apply(five_UTR$ch3, 1,modify_id))))
i<-1
while(i<=nrow(five_UTR$ch1)){
print(i)
j<-1
while(j<=nrow(five_UTR$ch1)){
if(i==j){
j<-j+1
next;
}
if(five_UTR$ch1[i,'attributes'] == five_UTR$ch1[j,'attributes']){
five_UTR$ch1[i,'start']<-min(five_UTR$ch1[i,"start"],five_UTR$ch1[j,"start"])
five_UTR$ch1[i,'end']<-max(five_UTR$ch1[i,"end"],five_UTR$ch1[j,"end"])
five_UTR$ch1<-five_UTR$ch1[-j,]
}
j<-j+1
}
i<-i+1
}
View(five_UTR)
View(five_UTR[["ch1"]])
df3<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-((as.numeric(df2$end)-as.numeric(df2$start))/(as.numeric(df1$end)-as.numeric(df1$start)))
df3<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
View(df3)
normalize <- function(x) {
return((x-min(x))/(max(x)-min(x)))
}
df3
list_1<-unlist(df3$`as.numeric(utr5_overlap$ch1[i, 4])/percent`)
list_1
normalize(list_1)
list_2<-normalize(list_1)
list_2
for(i in 1:nrow(df3)){
df3$`as.numeric(utr5_overlap$ch1[i, 4])/percent`[i]<-list_2[i]
}
View(df3)
for(k in 1:3){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(utr5_overlap[[k]][h,4])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
library(pheatmap)
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
#png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
#dev.off()
}
#png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
#png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
#dev.off()
}
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,5])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
df3<-data.frame()
for(i in 1:nrow(utr5_overlap$ch1)){
df1<-subset(gene$ch1, attributes == utr5_overlap$ch1[i,2])
df2<-subset(five_UTR$ch1, attributes == utr5_overlap$ch1[i,2])
percent<-((as.numeric(df2$end)-as.numeric(df2$start))/(as.numeric(df1$end)-as.numeric(df1$start)))
df3<-rbind(df3,cbind(utr5_overlap$ch1[i,1:4],percent,as.numeric(utr5_overlap$ch1[i,4])/percent))
}
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
