ch2<-read.table("DATA/chromosome2.cds.coords.tsv")
colnames(ch2)<-c("ID","start","end","strand")
ch3<-read.table("DATA/chromosome3.cds.coords.tsv")
colnames(ch3)<-c("ID","start","end","strand")
CDS<-mget(ls(pattern = "ch"))
ch3<-find_overlapping_gene(Block$ch3,CDS$ch3,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE, b_primer=T)
View(Bprimer)
ch1<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "I"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start4", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
ch1 <- na.omit(B_ch1)
ch2<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "II"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start4", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
ch3<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "III"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start3", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
Block<-mget(ls(pattern = "ch"))
ch3<-find_overlapping_gene(Block$ch3,CDS$ch3,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE, b_primer=T)
ch1<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "I"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start4", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
ch1 <- na.omit(B_ch1)
ch2<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "II"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start4", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
ch3<-type.convert((as.data.frame(t(as.data.frame(
apply(subset(Bprimer, chr1 == "III"),
1,reverse_negative_strand,
up_start="start3", up_end="end3",
down_start="start4", down_end="end4",
up_strand="strand3", down_strand="strand4"))))), as.is = TRUE)
Block<-mget(ls(pattern = "ch"))
ch3<-find_overlapping_gene(Block$ch3,CDS$ch3,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE, b_primer=T)
ch1<-B_CDS$ch1
ch2<-B_CDS$ch2
B_CDS<-mget(ls(pattern = "ch"))
View(B_CDS)
View(B_CDS[["ch3"]])
ch1<-find_overlapping_gene(Serial$ch1,CDS$ch1,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
ch2<-find_overlapping_gene(Serial$ch2,CDS$ch2,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
ch3<-find_overlapping_gene(Serial$ch3,CDS$ch3,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
S_CDS<-mget(ls(pattern = "ch1"))
overlap_cds_ch1<-rbind(GS_CDS$ch1,B_CDS$ch1,S_CDS$ch1)
overlap_cds_ch1<-overlap_cds_ch1[order(overlap_cds_ch1$V1),]
strain_name<-overlap_cds_ch1$V1
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=80,nrow=69)
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-overlap_cds_ch1$V2
for(i in 1:80){
if(as.numeric(overlap_cds_ch1[i,4])>=0){
cds_matrix[overlap_cds_ch1[i,1], overlap_cds_ch1[i,2]]<-as.numeric(overlap_cds_ch1[i,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = "Strain-CDS overlap percent", na_col = "white")
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = "Strain-CDS overlap percent in chromosome 1", na_col = "white")
ch1<-rbind(GS_CDS$ch1,B_CDS$ch1,S_CDS$ch1)
ch2<-rbind(GS_CDS$ch2,B_CDS$ch2,S_CDS$ch2)
ch3<-rbind(GS_CDS$ch3,B_CDS$ch3,S_CDS$ch3)
CDS_overlap<-mget(ls(pattern = "ch"))
for(i in 1:3){
CDS_overlap[[i]]<-CDS_overlap[[i]][order(CDS_overlap[[i]][1]),]
}
View(CDS_overlap)
View(CDS_overlap[["ch1"]])
length(strain_name)
library(pheatmap)
ch1<-rbind(GS_CDS$ch1,B_CDS$ch1,S_CDS$ch1)
ch2<-rbind(GS_CDS$ch2,B_CDS$ch2,S_CDS$ch2)
ch3<-rbind(GS_CDS$ch3,B_CDS$ch3,S_CDS$ch3)
CDS_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][1]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
ch1<-rbind(GS_CDS$ch1,B_CDS$ch1,S_CDS$ch1)
ch2<-rbind(GS_CDS$ch2,B_CDS$ch2,S_CDS$ch2)
ch3<-rbind(GS_CDS$ch3,B_CDS$ch3,S_CDS$ch3)
ch1<-rbind(GS_CDS$ch1,B_CDS$ch1,S_CDS$ch1)
ch2<-rbind(GS_CDS$ch2,B_CDS$ch2,S_CDS$ch2)
ch3<-rbind(GS_CDS$ch3,B_CDS$ch3,S_CDS$ch3)
CDS_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][1]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
View(CDS_overlap)
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][2]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][2]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][2]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
install.packages("pheatmap")
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
length(strain_name)
nrow(CDS_overlap[[k]][2])
length(strain_name)
nrow(CDS_overlap[[k]][2])
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]][1]
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
length(strain_name)
nrow(CDS_overlap[[k]][2])
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][2]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
View(strain_name)
print(length(strain_name))
print(as.integer(length(strain_name)))
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-as.array(CDS_overlap[[k]][1])
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
print(strain_name)
print(length(strain_name))
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
nrow(CDS_overlap[[k]][2])
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]][2]
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
strain_name<-CDS_overlap[[k]][1]
debugSource('~/fission_yeast_project/fission_yeast_practice/draw_heatmap.R')
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]]$V1
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
print(strain_name)
print(length(strain_name))
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]]$V2
for(h in 1:80){
if(as.numeric(overlap_cds_ch1[h,4])>=0){
cds_matrix[overlap_cds_ch1[h,1], overlap_cds_ch1[h,2]]<-as.numeric(overlap_cds_ch1[h,4])
}
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]]$V1
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
print(strain_name)
print(length(strain_name))
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]]$V2
for(h in 1:nrow(CDS_overlap[[k]])){
cds_matrix[CDS_overlap[[k]][h,1], CDS_overlap[[k]][h,2]]<-as.numeric(CDS_overlap[[k]][h,4])
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+k), na_col = "white")
}
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]]$V1
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
print(strain_name)
print(length(strain_name))
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]]$V2
for(h in 1:nrow(CDS_overlap[[k]])){
cds_matrix[CDS_overlap[[k]][h,1], CDS_overlap[[k]][h,2]]<-as.numeric(CDS_overlap[[k]][h,4])
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = ("Strain-CDS overlap percent in chromosome"+as.character(k)), na_col = "white")
}
for(k in 1:3){
CDS_overlap[[k]]<-CDS_overlap[[k]][order(CDS_overlap[[k]][1]),]
strain_name<-CDS_overlap[[k]]$V1
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
print(j)
j<-j+1
}
print(i)
i<-i+1
}
print(strain_name)
print(length(strain_name))
cds_matrix<-matrix(ncol=nrow(CDS_overlap[[k]]),nrow=length(strain_name))
rownames(cds_matrix)<-strain_name
colnames(cds_matrix)<-CDS_overlap[[k]]$V2
for(h in 1:nrow(CDS_overlap[[k]])){
cds_matrix[CDS_overlap[[k]][h,1], CDS_overlap[[k]][h,2]]<-as.numeric(CDS_overlap[[k]][h,4])
}
p <- pheatmap(cds_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-CDS overlap percent in chromosome",as.character(k)), na_col = "white")
}
