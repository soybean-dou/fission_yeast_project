}
for(k in 1:1){
utr5_overlap[[k]]<-utr5_overlap[[k]][order(utr5_overlap[[k]][1]),]
strain_name<-utr5_overlap[[k]]$V1
utr5_name<-utr5_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(utr5_name))){
j=1;
while(j<length(utr5_name)){
if(i==j){
j<-j+1
next
}
if(utr5_name[i]==utr5_name[j]){
utr5_name<-utr5_name[-j]
}
j<-j+1
}
i<-i+1
}
utr5_matrix<-matrix(ncol=length(utr5_name),nrow=length(strain_name))
utr5_name
strain_name
rownames(utr5_matrix)<-strain_name
colnames(utr5_matrix)<-utr5_name
for(h in 1:nrow(utr5_overlap[[k]])){
utr5_matrix[utr5_overlap[[k]][h,1], utr5_overlap[[k]][h,2]]<-as.numeric(df3[h,6])
}
png(filename=paste0("strain_5utr_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(utr5_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-5UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
View(gene_data)
#-----------------------------------------------------------
ch1<-subset(gene_data, type == "ncRNA" & seqid == "I")
View(ch1)
ncRNA<-mget(ls(pattern = "ch"))
ch1<-find_overlapping_gene(GS$ch1, ncRNA$ch1,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
library(ape)
library(stringr)
library(dplyr)
library(writexl)
library(progress)
library(seqinr)
library(RColorBrewer)
source('find_overlap_func.r')
ch1<-find_overlapping_gene(GS$ch1, ncRNA$ch1,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
View(ch1)
debugSource('~/fission_yeast_project/fission_yeast_practice/find_overlap_func.r')
#-----------------------------------------------------------
ch1<-subset(gene_data, type == "ncRNA" & seqid == "I")
ch2<-subset(gene_data, type == "ncRNA" & seqid == "II")
ch3<-subset(gene_data, type == "ncRNA" & seqid == "III")
ncRNA<-mget(ls(pattern = "ch"))
ch1<-find_overlapping_gene(GS$ch1, ncRNA$ch1,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
View(ch1)
ch2<-find_overlapping_gene(GS$ch2, ncRNA$ch2,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
ch3<-find_overlapping_gene(GS$ch3, ncRNA$ch3,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
GS_ncRNA<-mget(ls(pattern = "ch"))
View(ch2)
View(ch3)
ch1<-find_overlapping_gene(Block$ch1, ncRNA$ch1,
x_start_name = "start1", x_end_name = "end2",
is_strain = TRUE)
ch1<-find_overlapping_gene(Block$ch1, ncRNA$ch1,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
ch2<-find_overlapping_gene(Block$ch2, ncRNA$ch2,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
ch3<-find_overlapping_gene(Block$ch3, ncRNA$ch3,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
B_ncRNA<-mget(ls(pattern = "ch"))
ch1<-find_overlapping_gene(Serial$ch1, ncRNA$ch1,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
ch2<-find_overlapping_gene(Serial$ch2, ncRNA$ch2,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
ch3<-find_overlapping_gene(Serial$ch3, ncRNA$ch3,
x_start_name = "start3", x_end_name = "end4",
is_strain = TRUE)
S_ncRNA<-mget(ls(pattern = "ch"))
ch1<-rbind(GS_ncRNA$ch1,B_ncRNA$ch1,S_ncRNA$ch1)
ch2<-rbind(GS_ncRNA$ch2,B_ncRNA$ch2,S_ncRNA$ch2)
ch3<-rbind(GS_ncRNA$ch3,B_ncRNA$ch3,S_ncRNA$ch3)
ncRNA_overlap<-mget(ls(pattern = "ch"))
ch1<-rbind(GS_ncRNA$ch1,B_ncRNA$ch1,S_ncRNA$ch1)
ch2<-rbind(GS_ncRNA$ch2,B_ncRNA$ch2,S_ncRNA$ch2)
ch3<-rbind(GS_ncRNA$ch3,B_ncRNA$ch3,S_ncRNA$ch3)
ncRNA_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-3UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
library(pheatmap)
ch1<-rbind(GS_ncRNA$ch1,B_ncRNA$ch1,S_ncRNA$ch1)
ch2<-rbind(GS_ncRNA$ch2,B_ncRNA$ch2,S_ncRNA$ch2)
ch3<-rbind(GS_ncRNA$ch3,B_ncRNA$ch3,S_ncRNA$ch3)
ncRNA_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-3UTR overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
View(ncRNA)
View(ncRNA[["ch1"]])
View(ncRNA_overlap)
View(ncRNA_overlap[["ch1"]])
View(GS_ncRNA)
View(B_ncRNA)
View(B_ncRNA[["ch1"]])
View(S_ncRNA)
dev.new()
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)), na_col = "white")
ch1<-rbind(GS_ncRNA$ch1,B_ncRNA$ch1,S_ncRNA$ch1)
ch2<-rbind(GS_ncRNA$ch2,B_ncRNA$ch2,S_ncRNA$ch2)
ch3<-rbind(GS_ncRNA$ch3,B_ncRNA$ch3,S_ncRNA$ch3)
ncRNA_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)), na_col = "white")
dev.off()
}
dev.new()
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)), na_col = "white")
#dev.off()
}
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)), na_col = "gray")
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)), na_col = "gray96")
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize = 5)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize = 3)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize_row = 3 fontsize_col = 5)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize_row = 3, fontsize_col = 5)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize_row = 5, fontsize_col = 8)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray96", fontsize_row = 5, fontsize_col = 5)
#png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray98", fontsize_row = 5, fontsize_col = 5)
ch1<-rbind(GS_ncRNA$ch1,B_ncRNA$ch1,S_ncRNA$ch1)
ch2<-rbind(GS_ncRNA$ch2,B_ncRNA$ch2,S_ncRNA$ch2)
ch3<-rbind(GS_ncRNA$ch3,B_ncRNA$ch3,S_ncRNA$ch3)
ncRNA_overlap<-mget(ls(pattern = "ch"))
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1000,height=1000,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray98", fontsize_row = 5, fontsize_col = 5)
dev.off()
}
for(k in 1:3){
ncRNA_overlap[[k]]<-ncRNA_overlap[[k]][order(ncRNA_overlap[[k]][1]),]
strain_name<-ncRNA_overlap[[k]]$V1
ncRNA_name<-ncRNA_overlap[[k]]$V2
i=1;
j=1;
as.numeric(length(strain_name))
while(i<as.numeric(length(strain_name))){
j=1;
while(j<length(strain_name)){
if(i==j){
j<-j+1
next
}
if(strain_name[i]==strain_name[j]){
strain_name<-strain_name[-j]
}
j<-j+1
}
i<-i+1
}
i=1;
while(i<as.numeric(length(ncRNA_name))){
j=1;
while(j<length(ncRNA_name)){
if(i==j){
j<-j+1
next
}
if(ncRNA_name[i]==ncRNA_name[j]){
ncRNA_name<-ncRNA_name[-j]
}
j<-j+1
}
i<-i+1
}
ncRNA_matrix<-matrix(ncol=length(ncRNA_name),nrow=length(strain_name))
strain_name
rownames(ncRNA_matrix)<-strain_name
colnames(ncRNA_matrix)<-ncRNA_name
for(h in 1:nrow(ncRNA_overlap[[k]])){
ncRNA_matrix[ncRNA_overlap[[k]][h,1], ncRNA_overlap[[k]][h,2]]<-as.numeric(ncRNA_overlap[[k]][h,4])
}
png(filename=paste0("strain_ncRNA_ch",k,".png"),width=1200,height=800,unit="px",bg="transparent")
p <- pheatmap(ncRNA_matrix, color = colorRampPalette(c("yellow", "red"))(100),
cluster_row = FALSE, cluster_cols = F, main = paste("Strain-ncRNA overlap percent in chromosome",as.character(k)),
na_col = "gray98", fontsize_row = 5, fontsize_col = 5)
dev.off()
}
View(GS_ncRNA)
View(S_ncRNA)
View(S_ncRNA[["ch1"]])
overlap_info<-data.frame()
overlap_info<-data.frame(nrow(CDS_overlap$ch1),nrow(CDS_overlap$ch2),nrow(CDS_overlap$ch3))
View(overlap_info)
barplot(overlap_info, names.arg = c("1","2","3"),
col=coul, border=F,
xlab="chromosome",
ylab="number of overlapping site",
ylim=c(0,80),
width = 0.8, space=0.8,
main="Overlap between deletion model and CDS")
barplot(as.matrix(overlap_info), names.arg = c("1","2","3"),
col=coul, border=F,
xlab="chromosome",
ylab="number of overlapping site",
ylim=c(0,80),
width = 0.8, space=0.8,
main="Overlap between deletion model and CDS")
coul <- brewer.pal(3, "Set1")
barplot(as.matrix(overlap_info), names.arg = c("1","2","3"),
col=coul, border=F,
xlab="chromosome",
ylab="number of overlapping site",
ylim=c(0,80),
width = 0.8, space=0.8,
main="Overlap between deletion model and CDS")
dev.new()
barplot(as.matrix(overlap_info), names.arg = c("1","2","3"),
col=coul, border=F,
xlab="chromosome",
ylab="number of overlapping site",
ylim=c(0,80),
width = 0.8, space=0.8,
main="Overlap between deletion model and CDS")
barplot(as.matrix(overlap_info), names.arg = c("1","2","3"),
col=c('red','green','blue'), border=F,
xlab="chromosome",
ylab="number of overlapping site",
ylim=c(0,80),
width = 0.8, space=0.8,
main="Overlap between deletion model and CDS")
